// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetrovvEgorkt_31_22.Database;

#nullable disable

namespace PetrovvEgorkt_31_22.Migrations
{
    [DbContext(typeof(CathedralDbContext))]
    partial class CathedralDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_degree_name")
                        .HasComment("Название степени");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("c_is_deleted")
                        .HasComment("Флаг мягкого удаления (true - запись удалена)");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_cd_academic_degree_academic_degree_id");

                    b.ToTable("cd_academic_degree", (string)null);
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Cathedral", b =>
                {
                    b.Property<int>("CathedralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cathedral_id")
                        .HasComment("Идентификатор записи кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CathedralId"));

                    b.Property<string>("CathedralName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_cathedralname")
                        .HasComment("Имя кафедры");

                    b.Property<int>("HeadTeacherId")
                        .HasColumnType("int")
                        .HasColumnName("f_head_teacher_id")
                        .HasComment("Идентификатор заведующего кафедрой");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("c_is_deleted")
                        .HasComment("Флаг мягкого удаления (true - запись удалена)");

                    b.HasKey("CathedralId")
                        .HasName("pk_cd_cathedral_cathedral_id");

                    b.HasIndex("HeadTeacherId")
                        .IsUnique();

                    b.ToTable("cd_cathedral", (string)null);
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_discipline_name")
                        .HasComment("Название дисциплины");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("c_is_deleted")
                        .HasComment("Флаг мягкого удаления (true - запись удалена)");

                    b.HasKey("DisciplineId")
                        .HasName("pk_cd_discipline_discipline_id");

                    b.ToTable("cd_discipline", (string)null);
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("c_is_deleted")
                        .HasComment("Флаг мягкого удаления (true - запись удалена)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_position_name")
                        .HasComment("Название должности");

                    b.HasKey("PositionId")
                        .HasName("pk_cd_position_position_id");

                    b.ToTable("cd_position", (string)null);
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int>("AcademicDegreeId")
                        .HasColumnType("int")
                        .HasColumnName("f_academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    b.Property<int>("CathedralId")
                        .HasColumnType("int")
                        .HasColumnName("f_cathedral_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_firstname")
                        .HasComment("Имя преподавателя");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("c_is_deleted")
                        .HasComment("Флаг мягкого удаления (true - запись удалена)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_lastname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_middlename")
                        .HasComment("Отчество преподавателя");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("f_position_id")
                        .HasComment("Идентификатор должности");

                    b.HasKey("TeacherId")
                        .HasName("pk_cd_teacher_teacher_id");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("CathedralId");

                    b.HasIndex("PositionId");

                    b.ToTable("cd_teacher", (string)null);
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Workload", b =>
                {
                    b.Property<int>("WorkloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("workload_id")
                        .HasComment("Идентификатор нагрузки");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkloadId"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("f_discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    b.Property<int>("Hours")
                        .HasColumnType("int")
                        .HasColumnName("c_hours")
                        .HasComment("Количество часов");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("c_is_deleted")
                        .HasComment("Флаг мягкого удаления (true - запись удалена)");

                    b.Property<string>("LessonType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("c_lesson_type")
                        .HasComment("Тип занятия (лекция/практика)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("f_teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    b.HasKey("WorkloadId")
                        .HasName("pk_cd_workload_workload_id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("cd_workload", (string)null);
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Cathedral", b =>
                {
                    b.HasOne("PetrovvEgorkt_31_22.Models.Teacher", "HeadTeacher")
                        .WithOne()
                        .HasForeignKey("PetrovvEgorkt_31_22.Models.Cathedral", "HeadTeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cathedral_head_teacher");

                    b.Navigation("HeadTeacher");
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Teacher", b =>
                {
                    b.HasOne("PetrovvEgorkt_31_22.Models.AcademicDegree", "AcademicDegree")
                        .WithMany()
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_academic_degree");

                    b.HasOne("PetrovvEgorkt_31_22.Models.Cathedral", "Cathedral")
                        .WithMany("Teachers")
                        .HasForeignKey("CathedralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_cathedral");

                    b.HasOne("PetrovvEgorkt_31_22.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_position");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Cathedral");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Workload", b =>
                {
                    b.HasOne("PetrovvEgorkt_31_22.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_workload_discipline");

                    b.HasOne("PetrovvEgorkt_31_22.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workload_teacher");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("PetrovvEgorkt_31_22.Models.Cathedral", b =>
                {
                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
